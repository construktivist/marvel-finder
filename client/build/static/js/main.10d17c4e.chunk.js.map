{"version":3,"sources":["Components/Comics.js","Components/Characters.js","Components/Search.js","Components/Modal.js","Components/Profile.js","Components/Cover.js","Components/Results.js","Components/Loading.js","Components/App.js","index.js"],"names":["Comics","this","props","setSearchType","handleResults","find","searchTerm","className","React","Component","Characters","Search","handleChange","event","setState","search","target","value","handleSelect","sort","console","log","state","handleSubmit","preventDefault","onSubmit","id","type","name","onChange","searchType","Modal","link","label","$","remove","removeClass","tabIndex","role","aria-labelledby","data-dismiss","aria-label","aria-hidden","marvel_id","description","creators","map","creator","index","key","slice","charAt","toUpperCase","href","url","rel","to","Profile","data-toggle","data-target","src","thumbnail","alt","Cover","title","Results","searchResults","result","replace","path","extension","urls","items","issueNumber","Loading","App","newSearchType","newSearchTerm","newOrderBy","featured","offset","results","orderBy","findMore","request","params","characterName","titleStartsWith","loading","axios","get","then","response","data","catch","error","newResults","updateOffset","newOffset","previousY","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","currentY","boundingClientRect","y","currentOffset","render","ref","Nav","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d17c4e.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../Styles/Global.css'\n\nclass Comics extends React.Component {\n    \n    //Component will set search type to comic then clear the existing results and then run another search using the current search term.\n    componentDidMount () {\n\n        this.props.setSearchType('comic');\n        this.props.handleResults([]);\n        this.props.find(this.props.searchTerm);\n\n    }\n\n    render () {\n        return (\n            <div className=\"row global-margin\">\n                <h2>Comics</h2>\n                {/* <div ref={loadingRef => (this.loadingRef = loadingRef)}>\n                    <Loading />\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default Comics;","import React from 'react';\n\nimport '../Styles/Global.css'\n\nclass Characters extends React.Component {\n    \n    //Component will set search type to character then clear the existing results and then run another search using the currect search term.\n    componentDidMount () {\n        this.props.setSearchType('character');\n        this.props.handleResults([]);\n        this.props.find(this.props.searchTerm);\n\n    }\n\n    render () {\n        return (\n            <div className=\"row global-margin\">\n                <h2>Characters</h2>\n            </div>\n        )\n    }\n}\n\nexport default Characters;","import React from 'react';\nimport '../Styles/Search.css';\n\n\n// Search bar component\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        search: '',\n        sort: '',\n        }\n    }\n\n    //Handle text field changes for search input\n    handleChange = event => {\n        this.setState({\n            search: event.target.value \n        })\n    }\n\n    //Handles the sort dropdown\n    handleSelect = event => {\n        this.setState({\n            sort: event.target.value\n        }, () => {\n            console.log('HANDLE SELECT ' + this.state.sort)\n            this.props.find(this.state.search, this.state.sort); \n        })\n    }\n\n    //Make API call on submit using find() (App.js).\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.find(this.state.search, this.state.sort);\n    }\n\n    render () {\n        return (\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"input-group\">\n                            <div className=\"searchbox w-50\">\n                                <i className=\"fas fa-search col-xs-2\"></i> \n                                <input \n                                    id=\"search\" \n                                    className=\"search col-xs-10\" \n                                    type=\"text\" \n                                    value={this.state.name}\n                                    onChange={this.handleChange} />\n                            </div>\n                            { this.props.searchType === 'comic' ?\n                                <select onChange={this.handleSelect} className=\"m-select\" id=\"input-sort-select\">\n                                    <option value=\"-focDate\">Most Recent</option>\n                                    <option value=\"focDate\">Older</option>\n                                    <option value=\"-title\">Alphabetical (A-Z)</option>\n                                    <option value=\"title\">Alphabetical (Z-A)</option>\n                                    <option value=\"-issueNumber\">Issue Number (Descending)</option>\n                                    <option value=\"issueNumber\">Issue Number (Ascending)</option>\n                                </select> : <div></div> }\n                        \n                        </div>\n                    </form>\n                </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport $ from \"jquery\";\nimport { Link } from 'react-router-dom'\n\nimport '../Styles/Modal.css';\n\n\nclass Modal extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            link: '/comics',\n            label: 'Comics'\n        }\n    }\n\n    componentDidMount () {\n        //Removes the modal backdrop when switching between Profile and Cover.\n        $('.modal-backdrop').remove();\n        $('body').removeClass('modal-open');\n\n        //Updates this state so the Link 'to' and 'label' rendered below in the modal.\n        if (this.props.searchType === 'comic') {\n            const newLink = '/characters';\n            const newLabel = 'Character';\n            this.setState({\n                link: newLink,\n                label: newLabel\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"modal fade\" id={this.props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby={this.props.id}>\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"modalTitle\">{this.props.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>Marvel ID: {this.props.marvel_id}</p>\n                        <p>{this.props.description}</p>\n                        {this.props.creators.map((creator, index) => \n                        <div className=\"creator\" key={index + creator.name.slice('')}>\n                            <p className=\"role\">{creator.role.charAt(0).toUpperCase() + creator.role.slice(1) + \": \"}</p>\n                            <p className=\"name\">{creator.name}</p>\n                        </div>    \n                        )}\n                        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">Marvel.com</a>\n                        <br />\n                        <Link to={this.state.link}>{this.state.label}</Link>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Modal;","import React from 'react';\nimport Modal from './Modal';\n\nimport '../Styles/Profile.css';\n\n// Displays an overview for Marvel Character profile. \nclass Profile extends React.Component {\n    render () {\n        return (\n            <div className=\"profile-modal-wrapper\">\n                <div className=\"profile expand col-xs-2\" data-toggle=\"modal\" data-target={'#' + this.props.id}>\n                        <div className=\"image-wrapper\">\n                            <img src={this.props.thumbnail} alt={this.props.name + \" Profile Image\"}/>\n                        </div>\n                        <div className=\" info-wrapper\">\n                            <h5>{this.props.name}</h5>\n                        </div> \n                </div>\n                <Modal \n                    key={this.props.id}\n                    id={this.props.id}\n                    marvel_id={this.props.marvel_id}\n                    name={this.props.name}\n                    description={this.props.description}\n                    creators={this.props.creators}\n                    url={this.props.url}\n                    searchType={this.props.searchType}\n                />  \n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport Modal from './Modal';\n\nimport '../Styles/Cover.css';\n\n// Displays an overview for Marvel Character profile. \nclass Cover extends React.Component {\n    render () {\n        return (\n            <div className=\"cover-modal-wrapper\">\n                <div className=\"cover expand col-xs-2\" data-toggle=\"modal\" data-target={'#' + this.props.id}>\n                        <div className=\"image-wrapper\">\n                            <img src={this.props.thumbnail} alt=\"comic\"/>\n                        </div> \n                </div>\n                <Modal \n                            key={this.props.id}\n                            id={this.props.id}\n                            marvel_id={this.props.marvel_id}\n                            name={this.props.title}\n                            creators={this.props.creators}\n                            url={this.props.url}\n                            searchType={this.props.searchType}\n                        /> \n            </div>\n        )\n    }\n}\n\nexport default Cover","import React from 'react';\n\nimport Profile from './Profile';\nimport Cover from './Cover';\n\n// Takes api data from App.js and sends it to the appropriate component.\nclass Results extends React.Component {\n\n    render () {\n        // Renders Profile component if the searchType is equal to character\n        if (this.props.searchType === 'character' && typeof this.props.searchResults === 'object') {\n            return (\n                <div className=\"results row\">\n                    {this.props.searchResults.map((result) => \n                        <Profile \n                            key={result.id} \n                            id={result.name.replace(/[^A-Za-z]/g, '')}\n                            marvel_id={result.id} \n                            name={result.name}\n                            description={result.description}\n                            creators={[]}\n                            thumbnail={result.thumbnail.path + '.' + result.thumbnail.extension} \n                            url={result.urls[1].url}\n                            searchType={this.props.searchType}\n                        />\n                    )}\n                </div>\n            )\n        }\n        // Renders Cover component if the searchType is equal to comic\n        else if (this.props.searchType === 'comic' && typeof this.props.searchResults === 'object') {\n            return (\n                <div className=\"results row\">\n                    {this.props.searchResults.map((result, index) => \n                        <Cover\n                            key={result.title.replace(/[^A-Za-z]/g, '') + \"-\" + index}\n                            id={result.title.replace(/[^A-Za-z]/g, '') + \"-\" + index}\n                            marvel_id={result.id}\n                            title={result.title}\n                            url={result.urls[0].url}\n                            creators={result.creators.items}\n                            issueNumber={result.issueNumber}\n                            thumbnail={result.thumbnail.path + '.' + result.thumbnail.extension}\n                            searchType={this.props.searchType} \n                            />\n                    )}\n                </div>\n            )\n        }\n        // Render \n        else {\n            return (\n                <div className=\"results row\">\n                    <h3 className=\"sorry\">\n                        {this.props.searchResults}\n                    </h3>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Results;","import React from 'react';\n\nimport '../Styles/Loading.css';\n\nclass Loading extends React.Component {\n    render () {\n        return (\n            <div className=\"loading\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                    <p>LOADING...</p>\n            </div>\n        )\n    }\n}\n\nexport default Loading;","// DEPENDENCIES\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// COMPONENTS\nimport '../Styles/App.css';\nimport Comics from './Comics';\nimport Characters from './Characters';\nimport Search from './Search';\nimport Results from './Results';\nimport Loading from './Loading';\n\nclass App extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      featured: 'spider-man',\n      loading: false,\n      searchTerm: '',\n      orderBy:'',\n      offset: 0,\n      searchType: 'comic',\n      results: '',\n      previousY: 0,\n    }\n  }\n\n  //Component will search for the featured hero after mounting.\n  componentDidMount () {\n\n    if (!this.state.results) {\n      this.find();\n    }\n\n    var options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    }\n\n    this.observer = new IntersectionObserver(this.handleObserver.bind(this), options);\n    this.observer.observe(this.loadingRef);\n  }\n\n  //Checks user scroll position and loads more comics when the user scrolls to the bottom.\n  handleObserver(entities, observer) {\n    const currentY = entities[0].boundingClientRect.y;\n    if (this.state.previousY > currentY ) {\n      let currentOffset = this.state.offset;\n      this.setState({ offset: currentOffset += 24 });\n      this.findMore(this.state.searchTerm, this.state.orderBy);\n    }\n    this.setState({ previousY: currentY });\n  }\n\n\n  //This function sets the searchType state based on what component the user has mounted.\n  setSearchType = (newSearchType) => {\n    this.setState({\n      searchType: newSearchType\n    })\n  }\n  \n\n  //Performs the specific GET request using request() based on the searchType set by App.js\n  find = (newSearchTerm, newOrderBy) => {\n\n    if (!newSearchTerm) newSearchTerm = this.state.featured;\n    if (!newOrderBy) newOrderBy = '-focDate';\n\n    this.setState({\n      offset: 0,\n      results: [],\n      searchTerm: newSearchTerm,\n      orderBy: newOrderBy\n    }, () => {\n      this.search()\n    });\n  }\n\n  //Performs GET request specifically for the infinite scroll. This uses offset as it gets updated. \n  findMore = (newSearchTerm, newOrderBy) => {\n\n    if (!newSearchTerm) newSearchTerm = this.state.featured;\n    if (!newOrderBy) newOrderBy = '-focDate';\n\n    this.setState({\n      searchTerm: newSearchTerm,\n      orderBy: newOrderBy\n    }, () => {\n      this.search()\n    });\n  }\n\n  //Performs the specific GET request using request() based on the searchType and searchTerm.\n  search = () => {\n    if (this.state.searchType === 'character') {\n      this.request('/character', {\n              params: {\n                  characterName: this.state.searchTerm,\n              }\n      });      \n    }\n    else if (this.state.searchType === 'comic') {  \n        this.request('/comics', {\n            params: {\n                titleStartsWith: this.state.searchTerm,\n                orderBy: this.state.orderBy,\n                offset: this.state.offset,\n            }\n        });\n    }\n    else {\n        console.log('ERROR: searchType: ' + this.state.searchType + ' does not match comics or characters');\n    }\n  }\n\n  //Used by find() below to perform the specific GET request.\n  request = (type, params) => {\n\n    // Enable the Loading message appear.\n    this.setState({\n      loading: true,\n    });\n\n    // GET request to marvel api\n    axios.get(type, params)\n    .then(response => {\n      if (type === '/character') {\n        this.setState({\n          results: response.data,\n          loading: false,\n        });\n      }\n      else {\n        \n        if (typeof response.data === 'object') {\n          this.setState({ \n            results:  [...this.state.results, ...response.data],\n            loading: false\n           });\n\n        }\n        else {\n          this.setState({ \n            results: response.data,\n            loading: false\n          })\n        }\n\n      }\n    })\n    .catch(error => {\n        console.log('ERROR: ' + error)\n    })\n  }\n\n    //This function passes api data from Search.js to App.js\n    handleResults = (newResults) => {  \n      this.setState({\n        results: newResults\n      })\n    }\n\n    updateOffset = (newOffset) => {\n        this.setState({\n          offset: newOffset\n        })\n        console.log(this.state.offset);\n        this.findMore(this.state.searchTerm, this.state.orderBy);\n    }\n\n  render () {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Nav />\n\n          <Search \n            searchType={this.state.searchType} \n            handleResults={this.handleResults} \n            find={this.find}\n          />\n\n          <Route path=\"/characters\" render={(props) => \n            <Characters \n                setSearchType={this.setSearchType}\n                searchTerm={this.state.searchTerm} \n                handleResults={this.handleResults}\n                find={this.find}               \n            />}\n          />\n\n          <Route path=\"/comics\" render={(props) => \n            <Comics \n              setSearchType={this.setSearchType}\n              searchTerm={this.state.searchTerm}\n              handleResults={this.handleResults}  \n              find={this.find} \n            />}\n          />\n\n          \n          <Results \n            searchType={this.state.searchType} \n            searchResults={this.state.results} \n          />\n\n          \n          <div ref={loadingRef => (this.loadingRef = loadingRef)}>\n            {this.state.loading ? <Loading /> : <div></div>}\n          </div>\n\n\n        </div>\n      </Router>\n    )\n  }\n  \n}\n\nclass Nav extends React.Component {\n  render () {\n    return (\n      <div className=\"row\">\n          <nav>\n            <h1>Marvel Search</h1>\n            <Link to=\"/characters\">Characters</Link>\n            <Link to=\"/comics\">Comics</Link>\n          </nav>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}